var TaggableUtil={};TaggableUtil.getCoordinates=function(a){var b=0;var c=0;var d=$(a.target);var e=TaggableUtil.findPosition(d[0]);if(!a)var a=window.event;if(a.pageX||a.pageY){b=a.pageX;c=a.pageY}else if(a.clientX||a.clientY){b=a.clientX+document.body.scrollLeft+document.documentElement.scrollLeft;c=a.clientY+document.body.scrollTop+document.documentElement.scrollTop}b=b-e[0];c=c-e[1];return[b,c]};TaggableUtil.findPosition=function(a){if(typeof(a.offsetParent)!="undefined"){for(var b=0,c=0;a;a=a.offsetParent){b+=a.offsetLeft;c+=a.offsetTop}return[b,c]}return[a.x,a.y]};TaggableUtil.convertFromOriginalToZoom=function(a,b){var c=b.height()/b.data('originalHeight');return[a[0]*c,a[1]*c]};TaggableUtil.convertFromZoomToOriginal=function(a,b){var c=b.data('originalHeight')/b.height();return[a[0]*c,a[1]*c]};TaggableUtil.getOtherRectPoints=function(a){var b,c;if(a[0][0]<a[1][0]&&a[0][1]<a[1][1]){b=[a[0][0],a[1][1]];c=[a[1][0],a[0][1]]}else if(a[0][0]>a[1][0]&&a[0][1]>a[1][1]){b=[a[1][0],a[0][1]];c=[a[0][0],a[1][1]]}else if(a[0][0]<a[1][0]&&a[0][1]>a[1][1]){b=[a[0][0],a[1][1]];c=[a[1][0],a[0][1]]}else{b=[a[1][0],a[0][1]];c=[a[0][0],a[1][1]]}return[b,c]};function Tag(a,b,c,d,e){this.color=a;this.points=b;this.description=c;this.imageKey=d;this.saveUrl=e+'administration/saveTag';this.geneLinks=[]};Tag.prototype.getColor=function(){return this.color};Tag.prototype.getPoints=function(){return this.points};Tag.prototype.getDescription=function(){return this.description};Tag.prototype.getGeneLinks=function(){return this.geneLinks};Tag.prototype.getFormattedColor=function(){if(this.color[0]+this.color[1]+this.color[2]!=0){return'rgba('+this.color.join()+',0.5)'}else{return''}};Tag.prototype.save=function(d){var e=new TagSavingDialog();e.start();$.ajax({url:this.saveUrl,type:'POST',data:{color:this.color,points:this.points,description:this.description,geneLinks:this.geneLinks},dataType:'json',success:function(a,b,c){if(!a.error){e.success();d()}else{e.error()}},error:function(a,b,c){e.error()}})};function TagSavingDialog(){this.dialog=$('<div />',{'class':'tag-saving-dialog',});this.block=$('<div />');this.contents=$('<div />',{'class':'tag-saving-contents'});this.dialog.append(this.contents)};TagSavingDialog.prototype.start=function(){this.block.addClass('page-block');this.block.height($(window).height());this.block.width($(window).width());var a=this.block;$(window).resize(function(){a.height($(this).height());a.width($(this).width())});$('body').append(this.block);$('body').append(this.dialog)};TagSavingDialog.prototype.success=function(){alert("Success")};TagSavingDialog.prototype.error=function(){alert("Error")};function TagBoard(a,b,c,d,e,f){this.board=a;this.image=c;this.organisms=d;this.tags=this.__convertOriginalDataToTags(b);this.stage=null;this.layer=null;this.locked=false;this.selectedTag=null;this.siteUrl=e;this.defaultInfoViewCallback=f};TagBoard.prototype.getBoard=function(){return this.board};TagBoard.prototype.addTag=function(a,b,c){var d=new Tag(a,b,c,this.image.attr('id'),this.siteUrl);d.save(Util.scopeCallback(this,function(){this.tags.push(d)}))};TagBoard.prototype.redraw=function(){this.locked=false;var a=this.image.attr('id');if(!this.stage){this.stage=new Kinetic.Stage({container:this.board[0],width:this.board.width(),height:this.board.height()})}else{this.stage.setSize(this.board.width(),this.board.height());this.stage.removeChildren()}this.layer=new Kinetic.Layer();for(var b=0;b<this.tags.length;b++){this.layer.add(this.__createPolyFromTag(this.tags[b],b))}this.stage.add(this.layer)};TagBoard.prototype.__createPolyFromTag=function(b,c){var d=b.getFormattedColor();var e=[];for(var f=0;f<b.getPoints().length;f++){e[f]=TaggableUtil.convertFromOriginalToZoom(b.getPoints()[f],this.image)}if(e.length==2){var g=TaggableUtil.getOtherRectPoints(e);e[2]=e[1];e[1]=g[0];e[3]=g[1]}var h=new Kinetic.Polygon({points:$.map(e,function(a){return a}),fill:"",stroke:"rgba(255,255,255,0)",strokeWidth:1});h.color=d;h.description=b.getDescription();h.setId(c);var j=10000000;var i=-1;var k=-1;for(var f=0;f<e.length;f++){if(e[f][0]<j){j=e[f][0]}if(e[f][0]>i){i=e[f][0]}if(e[f][1]>k){k=e[f][1]}}h.pos=[(j+i)/2,k];h.on('mouseover',Util.scopeCallback(this,this.polyOnMouseOver));h.on('mouseout',Util.scopeCallback(this,this.polyOnMouseOut));h.on('click',Util.scopeCallback(this,this.polyOnClick));return h};TagBoard.prototype.polyOnClick=function(a){this.locked=!this.locked};TagBoard.prototype.polyOnMouseOut=function(a){if(!this.locked){a.shape.attrs.fill="";a.shape.attrs.stroke="rgba(255,255,255,0)";$('#taggable-tooltip').hide();this.layer.draw()}};TagBoard.prototype.polyOnMouseOver=function(a){if(!this.locked){a.shape.attrs.fill=a.shape.color;a.shape.attrs.stroke="black";var b=a.shape;var c=this.__getPolyPos(a.shape);c[0]-=$('#taggable-tooltip').html(b.description).width()/2;c[1]-=$(window).scrollTop()-20;$('#taggable-tooltip').css("left",c[0]+"px").css("top",c[1]+"px").show();this.layer.draw();var d=a.shape.getId();this.selectedTag=this.tags[d]}};TagBoard.prototype.__getPolyPos=function(a){var b=TaggableUtil.findPosition(this.board[0]);return[b[0]+a.pos[0],b[1]+a.pos[1]]};TagBoard.prototype.__convertOriginalDataToTags=function(a){var b=[];for(tag in a){b.push(new Tag(tag.color,tag.points,tag.description))}return b};function DrawingBoard(a,b){this.board=a;this.image=b;this.taggingConfig={fillStyle:'',shape:'rect',n:0,mouseDown:false};this.points=[]};DrawingBoard.prototype.getBoard=function(){return this.board};DrawingBoard.prototype.getCurrentTagPoints=function(){return this.points};DrawingBoard.prototype.startRect=function(a){var b=TaggableUtil.getCoordinates(a);this.points=[];this.points[0]=TaggableUtil.convertFromZoomToOriginal(b,this.image);this.taggingConfig.mouseDown=true};DrawingBoard.prototype.finishRect=function(a){var b=TaggableUtil.getCoordinates(a);this.points[1]=TaggableUtil.convertFromZoomToOriginal(b,this.image);this.taggingConfig.mouseDown=false};DrawingBoard.prototype.expandRect=function(a){var b=this.board[0];if(this.taggingConfig.mouseDown){var c=TaggableUtil.getCoordinates(a);c=TaggableUtil.convertFromZoomToOriginal(c,this.image);this.points[1]=c;var d=[];for(var e=0;e<this.points.length;e++){d[e]=TaggableUtil.convertFromOriginalToZoom(this.points[e],this.image)}this.__drawRect(d,true)}};DrawingBoard.prototype.startPoly=function(a){var b=TaggableUtil.getCoordinates(a);this.points=[];this.points.push(TaggableUtil.convertFromZoomToOriginal(b,this.image));this.taggingConfig.n=1;this.taggingConfig.mouseDown=true};DrawingBoard.prototype.finishPoly=function(a){var b=TaggableUtil.getCoordinates(a);this.points.push(TaggableUtil.convertFromZoomToOriginal(b,this.image));this.taggingConfig.mouseDown=false};DrawingBoard.prototype.expandPoly=function(a){if(this.taggingConfig.mouseDown&&this.taggingConfig.n%8==1){var b=TaggableUtil.getCoordinates(a);b=TaggableUtil.convertFromZoomToOriginal(b,this.image);this.points.push(b);var c=[];for(var d=0;d<this.points.length;d++){c[d]=TaggableUtil.convertFromOriginalToZoom(this.points[d],this.image)}this.__draw(c,true)}};DrawingBoard.prototype.redraw=function(){if(this.points.length>=2){var a=[];for(var b=0;b<this.points.length;b++){a[b]=TaggableUtil.convertFromOriginalToZoom(this.points[b],this.image)}if(a.length==2){var c=TaggableUtil.getOtherRectPoints(a);a[2]=a[1];a[1]=c[0];a[3]=c[1]}this.__draw(a,true)}};DrawingBoard.prototype.__draw=function(a,b){var c=this.board[0];if(b){c.width=c.width}var d=c.getContext("2d");d.beginPath();d.moveTo(a[0][0],a[0][1]);for(var e=1;e<a.length;e++){d.lineTo(a[e][0],a[e][1])}d.closePath();if(this.taggingConfig.fillStyle!=""){d.fillStyle=this.taggingConfig.fillStyle;d.fill()}d.stroke()};DrawingBoard.prototype.__drawRect=function(a,b){var c=[a[0],a[1]];var d=TaggableUtil.getOtherRectPoints(c);c[2]=c[1];c[1]=d[0];c[3]=d[1];this.__draw(c,b)};function DrawingAPI(a,b,c,d,e,f){this.tagBoard=new TagBoard(b,d,e,f,c);this.drawingBoard=new DrawingBoard(a,e);this.organisms=f;this.image=e};DrawingAPI.prototype.setFillStyle=function(a){this.drawingBoard.taggingConfig.fillStyle=a};DrawingAPI.prototype.setN=function(a){this.drawingBoard.taggingConfig.n=a};DrawingAPI.prototype.setMouseDown=function(a){this.drawingBoard.taggingConfig.mouseDown=a};DrawingAPI.prototype.setShape=function(a){if(a!='rect'){this.drawingBoard.taggingConfig.shape='poly'}else{this.drawingBoard.taggingConfig.shape='rect'}};DrawingAPI.prototype.getFillStyle=function(){return this.drawingBoard.taggingConfig.fillStyle};DrawingAPI.prototype.getN=function(){return this.drawingBoard.taggingConfig.n};DrawingAPI.prototype.getMouseDown=function(){return this.drawingBoard.taggingConfig.mouseDown};DrawingAPI.prototype.getShape=function(a){return this.drawingBoard.taggingConfig.shape};DrawingAPI.prototype.getTagBoard=function(){return this.tagBoard};DrawingAPI.prototype.getDrawingBoard=function(){return this.drawingBoard};DrawingAPI.prototype.startTagging=function(){var a=this.drawingBoard.board;a.css('z-index',500);a.off('mousedown');a.off('mouseup');a.off('mousemove');if(this.getShape()=='rect'){a.on('mousedown',Util.scopeCallback(this.drawingBoard,this.drawingBoard.startRect));a.on('mouseup',Util.scopeCallback(this.drawingBoard,this.drawingBoard.finishRect));a.on('mousemove',Util.scopeCallback(this.drawingBoard,this.drawingBoard.expandRect))}else{a.on('mousedown',Util.scopeCallback(this.drawingBoard,this.drawingBoard.startPoly));a.on('mouseup',Util.scopeCallback(this.drawingBoard,this.drawingBoard.finishPoly));a.on('mousemove',Util.scopeCallback(this.drawingBoard,this.drawingBoard.expandPoly))}};DrawingAPI.prototype.endTagging=function(){var a=this.drawingBoard.board;a.css('z-index',0);a.off('mousedown');a.off('mouseup');a.off('mousemove')};DrawingAPI.prototype.saveTag=function(){var a=this.drawingBoard.getBoard();var b=this.drawingBoard.getCurrentTagPoints();var c=this.image.attr('id');var d=this.getFillStyle();var e=d.split('(')[1].split(')')[0].split(',');e.pop();for(var f=0;f<e.length;f++){e[f]=$.trim(e[f])}var g=$('#'+c+'-description-form .desc').val();this.getTagBoard().addTag(e,b,g);this.getTagBoard().redraw()};function TaggerUI(a,b,c,d,e,f,g,h,j){this.image=a;this.parent=b;this.originalData=c;this.genomicInfo=e;this.imagesUrl=f;this.siteUrl=g;this.organisms=d;this.title="";this.callback=j;this.alreadyLoaded=h;this.colors=[{colorRGB:'rgb(255, 0, 0)'},{colorRGB:'rgb(0, 0, 255)'},{colorRGB:'rgb(0, 255, 255)'},{colorRGB:'rgb(0, 98, 0)'},{colorRGB:'rgb(0, 255, 0)'},{colorRGB:'rgb(255, 255, 0)'},{colorRGB:'rgb(192, 192, 192)'},{colorRGB:'rgb(0, 0, 0)'}];this.created=false;for(var i=0;i<d.length;i++){this.title+=d[i].common_name;if(i<d.length-1){this.title+=", "}}$(this.image).zoomable({callback:Util.scopeCallback(this,this.createStructure),zoom_callback:Util.scopeCallback(this,this.resizeCanvas),zoom_callback_args:[$(this.image).attr('id')],alreadyLoaded:this.alreadyLoaded})};TaggerUI.prototype.createStructure=function(){var d=this.image.attr('id');this.parent.prepend(this.__renderToolbar(d));this.__renderGeneLinksMenu();if($('#taggable-tooltip').length==0){this.parent.parent().append('<div id="taggable-tooltip"></div>')}var e=$('<div />',{id:d+'-tag-board','class':'tag-board'}).prependTo(this.image.parent());e.draggable();var f=$('<canvas />',{id:d+'-drawing-board','class':'drawing-board'}).prependTo(this.image.parent());this.drawingAPI=new DrawingAPI(f,e,this.siteUrl,this.originalData,this.image,this.organisms);var g=this;$('#'+d+'-begin-tagging').live('click',function(){$(this).siblings('.add-tag-hidden').removeClass('add-tag-hidden').addClass('add-tag');$(this).addClass('add-tag-hidden').removeClass('add-tag');$('#'+d+'-toolbar-table-container').toggle();g.drawingAPI.startTagging()});$('#'+d+'-end-tagging').live('click',function(){$(this).siblings('.add-tag-hidden').removeClass('add-tag-hidden').addClass('add-tag');$(this).addClass('add-tag-hidden').removeClass('add-tag');$('#'+d+'-toolbar-table-container').toggle();g.drawingAPI.endTagging()});$('#'+d+'-color-toolbar button').on('click',function(){var a=$(this).css('background-color');var b="";if(a!="black"){var c=a.split("(")[1].split(")")[0].split(",");if(parseInt($.trim(c[0]))+parseInt($.trim(c[1]))+parseInt($.trim(c[2]))!=0){b="rgba("+c[0]+","+c[1]+","+c[2]+", 0.5)"}}g.drawingAPI.setFillStyle(b);g.drawingAPI.getDrawingBoard().redraw()});$('#'+d+'-draw-rect').on('click',function(){g.drawingAPI.setShape('rect');g.drawingAPI.startTagging()});$('#'+d+'-draw-poly').on('click',function(){g.drawingAPI.setShape('poly');g.drawingAPI.startTagging()});$('#'+d+'-submit-tag').on('click',function(){g.drawingAPI.saveTag()});var h=parseInt(this.image.css('left').split('px')[0]);var j=parseInt(this.image.css('top').split('px')[0]);this.created=true;this.resizeCanvas();this.drawingAPI.getTagBoard().getBoard().bind('drag',function(a,b){g.image.css('left',$(this).css('left')).css('top',$(this).css('top'));g.drawingAPI.getDrawingBoard().getBoard().css('left',$(this).css('left')).css('top',$(this).css('top'))});if(this.callback){this.callback()}};TaggerUI.prototype.resizeCanvas=function(){if(this.created){var a=this.drawingAPI.getDrawingBoard().getBoard();var b=this.drawingAPI.getTagBoard().getBoard();var c=this.image;a.css('left',c.css('left')).css('top',c.css('top'));a[0].height=c.height();a[0].width=c.width();b.css('left',c.css('left')).css('top',c.css('top'));b.height(c.height());b.width(c.width());this.drawingAPI.getTagBoard().redraw();this.drawingAPI.getDrawingBoard().redraw()}};TaggerUI.prototype.__renderToolbar=function(a){var b='';for(var c=0;c<this.colors.length;c++){b+='<button class="change-color toolbar-item" style="background-color: '+this.colors[c].colorRGB+'"></button>'}var d=$('<div class="toolbar-container"> 		<span> 			<img class="toolbar-icon" src="'+this.imagesUrl+'tag.png"></img> 		</span> 		<span> 			<img id="'+a+'-begin-tagging" class="add-tag toolbar-item" src="'+this.imagesUrl+'button-play_green.png"></img> 			<img id="'+a+'-end-tagging" class="add-tag-hidden toolbar-item" src="'+this.imagesUrl+'button-pause_red.png"></img> 		</span> 		<span id="'+a+'-toolbar-table-container" class="toolbar-table-container" style="display: none;"> 			<table cellspacing="0" cellpadding="0"> 				<thead> 					<tr> 						<th>Description</th> 						<th>Colors</th> 						<th>Draw Mode</th> 					</tr> 				</thead> 				<tbody> 					<tr> 						<td> 							<form id="'+a+'-description-form" class="desc-form toolbar-item"> 								<input type="text" name="desc" class="desc" /> 							</form> 						</td> 						<td id="'+a+'-color-toolbar">'+b+'</td> 						<td> 							<button id="'+a+'-draw-rect" class="draw-rect draw-type toolbar-item"> 								<img height="20px" src="'+this.imagesUrl+'rectButtonIcon.png"></img> 							</button> 							<button id="'+a+'-draw-poly" class="draw-poly draw-type toolbar-item"> 								<img height="20px" src="'+this.imagesUrl+'polygonButtonIcon.png"> 							</button> 						</td> 					</tr> 				</tbody> 			</table> 			<button id="'+a+'-submit-tag" class="submit-tag toolbar-item">Submit Tag</button> 		</span> 	</div>');return d};TaggerUI.prototype.__renderGeneLinksMenu=function(){var a=this.image.attr('id');var b=$('<div />',{'class':'organismTitle',text:this.title});this.genomicInfo.html(b);var c=$('<div />',{'class':'geneLinksMenu'});c.append($('<div />',{'class':'geneLinkContainer'}));var d=$('<input />',{type:'text',id:'newLink'+a});var e=$('<button />',{text:'Add New Gene Link'});c.append($('<div />',{'class':'newGeneLinkForm'}).append(d).append(e));this.genomicInfo.append(c);var f=$('<div />',{'class':'speciesInfo'});f.append(this.__renderSpeciesInfo());this.genomicInfo.append(f);this.genomicInfo.attr('id',a+'GeneLinkContainer')};TaggerUI.prototype.__renderSpeciesInfo=function(){return $('<div />')};(function(d){var e={init:function(b){var c={parent:d(this).parent(),originalData:[],title:'Genome Links',alreadyLoaded:false,siteUrl:'/'};if(b.imagesUrl[b.imagesUrl.length-1]!='/'){b.imagesUrl+='/'}if(b.siteUrl[b.siteUrl.length-1]!='/'){b.siteUrl+='/'}d.extend(c,b);return this.each(function(){var a=new TaggerUI(d(this),c.parent,c.originalData,c.organisms,c.genomicInfo,c.imagesUrl,c.siteUrl,c.alreadyloaded,c.callback);d(this).data('taggable',a)})}};d.fn.taggable=function(a){if(e[a]){return e[a].apply(this,Array.prototype.slice.call(arguments,1))}else if(typeof a==='object'||!a){return e.init.apply(this,arguments)}else{d.error('Method '+a+' does not exist on jQuery.taggable')}}})(jQuery);
